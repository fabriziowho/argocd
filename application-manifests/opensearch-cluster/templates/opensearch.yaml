apiVersion: opensearch.opster.io/v1
kind: OpenSearchCluster
metadata:
  name: {{ .Release.Name }}
spec:
  confMgmt:
    smartScaler: true
  security:
    config:
      securityConfigSecret:
        name: securityconfig-secret
      adminCredentialsSecret:
        name: admin-secret
    tls:
      transport:
        generate: true
      http:
        generate: true
  general:
    version: {{ .Values.config.opensearch.version }}
    httpPort: 9200
    vendor: opensearch
    serviceName: {{ .Release.Name }}
    {{- if $.Values.config.opensearch.plugins }}
    pluginsList:
    {{- range $.Values.config.opensearch.plugins }}
      - {{ . }}
    {{- end }}
    {{- end }}
    drainDataNodes: true
  dashboards:
    env:
      - name: CLIENT_ID
        valueFrom:
          secretKeyRef:
            name: opensearch-oidc
            key: client-id
      - name: CLIENT_SECRET
        valueFrom:
          secretKeyRef:
            name: opensearch-oidc
            key: client-secret
    version: {{ .Values.config.opensearch.version }}
    enable: true
    replicas: {{ .Values.config.opensearch.dashboards.count }}
    opensearchCredentialsSecret:
      name: admin-secret
    resources:
      requests:
        memory: {{ .Values.config.opensearch.dashboards.memory.request }}
        cpu: {{ .Values.config.opensearch.dashboards.cpu.request }}
      limits:
        memory: {{ .Values.config.opensearch.dashboards.memory.limit }}
        cpu: {{ .Values.config.opensearch.dashboards.cpu.limit }}
      # NOT SUPPORTED YET
      # affinity:
      #   podAntiAffinity:
      #     requiredDuringSchedulingIgnoredDuringExecution:
      #       - labelSelector:
      #           matchExpressions:
      #             - key: opensearch.cluster.dashboards
      #               operator: In
      #               values:
      #                 - opensearch-senec
      #         topologyKey: topology.kubernetes.io/zone
    additionalConfig:
      opensearch_security.auth.type: openid
      opensearch_security.openid.client_id: ${CLIENT_ID}
      opensearch_security.openid.client_secret: ${CLIENT_SECRET}
      opensearch_security.openid.base_redirect_url: https://opensearch.ops-product-logging.pg.senecops.com/
      opensearch_security.openid.connect_url:  https://login.microsoftonline.com/5b1a9799-26d8-4f3f-a53a-49a49c45b357/v2.0/.well-known/openid-configuration
  nodePools:
    - component: manager
      replicas: {{ .Values.config.opensearch.nodePools.manager.count }}
      diskSize: {{ .Values.config.opensearch.nodePools.manager.diskSize }}
      resources:
        requests:
          memory: {{ .Values.config.opensearch.nodePools.manager.memory.request }}
          cpu: {{ .Values.config.opensearch.nodePools.manager.cpu.request }}
        limits:
          memory: {{ .Values.config.opensearch.nodePools.manager.memory.limit }}
          cpu: {{ .Values.config.opensearch.nodePools.manager.cpu.limit }}
      roles:
        - cluster_manager
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.azure.com/agentpool
                    operator: In
                    values:
                      - user
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: opster.io/opensearch-nodepool
                    operator: In
                    values:
                      - manager
              topologyKey: topology.kubernetes.io/zone
    - component: data-a
      replicas: {{ .Values.config.opensearch.nodePools.data_a.count }}
      diskSize: {{ .Values.config.opensearch.nodePools.data_a.diskSize }}
      additionalConfig:
        node.attr.zone: zoneA
      NodeSelector:
      resources:
        requests:
          memory: {{ .Values.config.opensearch.nodePools.data_a.memory.request }}
          cpu: {{ .Values.config.opensearch.nodePools.data_a.cpu.request }}
        limits:
          memory: {{ .Values.config.opensearch.nodePools.data_a.memory.limit }}
          cpu: {{ .Values.config.opensearch.nodePools.data_a.cpu.limit }}
      roles:
        - data
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: topology.kubernetes.io/zone
                    operator: In
                    values:
                      - germanywestcentral-1
    - component: data-b
      replicas: {{ .Values.config.opensearch.nodePools.data_b.count }}
      diskSize: {{ .Values.config.opensearch.nodePools.data_b.diskSize }}
      additionalConfig:
        node.attr.zone: zoneB
      NodeSelector:
      resources:
        requests:
          memory: {{ .Values.config.opensearch.nodePools.data_b.memory.request }}
          cpu: {{ .Values.config.opensearch.nodePools.data_b.cpu.request }}
        limits:
          memory: {{ .Values.config.opensearch.nodePools.data_b.memory.limit }}
          cpu: {{ .Values.config.opensearch.nodePools.data_b.cpu.limit }}
      roles:
        - data
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: topology.kubernetes.io/zone
                    operator: In
                    values:
                      - germanywestcentral-2
    {{- if $.Values.config.opensearch.nodePools.ingest }}
    - component: ingest
      replicas: {{ .Values.config.opensearch.nodePools.ingest.count }}
      diskSize: {{ .Values.config.opensearch.nodePools.ingest.diskSize }}
      NodeSelector:
      resources:
        requests:
          memory: {{ .Values.config.opensearch.nodePools.ingest.memory.request }}
          cpu: {{ .Values.config.opensearch.nodePools.ingest.cpu.request }}
        limits:
          memory: {{ .Values.config.opensearch.nodePools.ingest.memory.limit }}
          cpu: {{ .Values.config.opensearch.nodePools.ingest.cpu.limit }}
      roles:
        - ingest
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.azure.com/agentpool
                    operator: In
                    values:
                      - user
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: opster.io/opensearch-nodepool
                    operator: In
                    values:
                      - ingest
              topologyKey: topology.kubernetes.io/zone
    {{- end }}
