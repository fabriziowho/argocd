# Opensearch Admin Credentials
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: opensearch-admin-secret
  annotations:
    "reflector.v1.k8s.emberstack.com/reflection-allowed": "true"
    "reflector.v1.k8s.emberstack.com/reflection-allowed-namespaces": "vector"
    "reflector.v1.k8s.emberstack.com/reflection-auto-enabled": "true"
    "reflector.v1.k8s.emberstack.com/reflection-auto-namespaces": "vector"
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: vault-backend
    kind: ClusterSecretStore
  target:
    name: admin-secret
    creationPolicy: Owner
  data:
    - secretKey: username
      remoteRef:
        key: {{ .Values.config.vault.name }}/data/opensearch-admin-secret
        property: username
    - secretKey: password
      remoteRef:
        key: {{ .Values.config.vault.name }}/data/opensearch-admin-secret
        property: password
---
# Opensearch Dashboard Credentials
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: opensearch-dashboard-secret
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: vault-backend
    kind: ClusterSecretStore
  target:
    name: dashboard-secret
    creationPolicy: Owner
  data:
    - secretKey: username
      remoteRef:
        key: {{ .Values.config.vault.name }}/data/opensearch-dashboard-secret
        property: username
    - secretKey: password
      remoteRef:
        key: {{ .Values.config.vault.name }}/data/opensearch-dashboard-secret
        property: password
---
# Opensearch OIDC Credentials
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: opensearch-oidc-secret
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: vault-backend
    kind: ClusterSecretStore
  target:
    name: opensearch-oidc
    creationPolicy: Owner
  data:
    - secretKey: client-id
      remoteRef:
        key: {{ .Values.config.vault.name }}/data/opensearch-oidc-secret
        property: client-id
    - secretKey: client-secret
      remoteRef:
        key: {{ .Values.config.vault.name }}/data/opensearch-oidc-secret
        property: client-secret
---
# AKHQ OIDC Credentials
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: akhq-oidc-secret
  namespace: kafka-cluster
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: vault-backend
    kind: ClusterSecretStore
  target:
    name: akhq-oidc
    creationPolicy: Owner
  data:
    - secretKey: client-id
      remoteRef:
        key: {{ .Values.config.vault.name }}/data/akhq-oidc-secret
        property: client-id
    - secretKey: client-secret
      remoteRef:
        key: {{ .Values.config.vault.name }}/data/akhq-oidc-secret
        property: client-secret
---
#  Opensearch Security Config Secret
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: securityconfig-secret
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: vault-backend
    kind: ClusterSecretStore
  target:
    name: securityconfig-secret
    creationPolicy: Owner
  data:
    - secretKey: action_groups.yml
      remoteRef:
        key: {{ .Values.config.vault.name }}/data/securityconfig-secret
        property: action_groups.yml
    - secretKey: config.yml
      remoteRef:
        key: {{ .Values.config.vault.name }}/data/securityconfig-secret
        property: config.yml
    - secretKey: internal_users.yml
      remoteRef:
        key: {{ .Values.config.vault.name }}/data/securityconfig-secret
        property: internal_users.yml
    - secretKey: nodes_dn.yml
      remoteRef:
        key: {{ .Values.config.vault.name }}/data/securityconfig-secret
        property: nodes_dn.yml
    - secretKey: roles.yml
      remoteRef:
        key: {{ .Values.config.vault.name }}/data/securityconfig-secret
        property: roles.yml
    - secretKey: roles_mapping.yml
      remoteRef:
        key: {{ .Values.config.vault.name }}/data/securityconfig-secret
        property: roles_mapping.yml
    - secretKey: tenants.yml
      remoteRef:
        key: {{ .Values.config.vault.name }}/data/securityconfig-secret
        property: tenants.yml
    - secretKey: whitelist.yml
      remoteRef:
        key: {{ .Values.config.vault.name }}/data/securityconfig-secret
        property: whitelist.yml
